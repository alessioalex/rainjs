<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
<testsuite name="Monitoring module" errors="0" tests="0" failures="0" time="0" timestamp="2013-06-03T12:24:47">
</testsuite>
<testsuite name="Monitoring module.Singleton Get" errors="0" tests="1" failures="0" time="0.007" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Singleton Get" name="should always get the same instance" time="0.007"></testcase>
</testsuite>
<testsuite name="Monitoring module.Constructor" errors="0" tests="13" failures="0" time="0.102" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Constructor" name="should throw error if one of the use cases have no zabbix key" time="0.008"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should throw error if operation is not supported" time="0.008"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should throw error if one of the use cases doesn`t have operation key" time="0.008"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should disable the module if monitoring key is missing from configuration" time="0.007"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should disable the module if adapter is null" time="0.007"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should disable the module if this is specified in the monitoring.conf" time="0.011"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should disable the module if metrics key are missing from the monitoring configuration" time="0.007"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should not disable the module if adapter, configuration and metrics for monitoring are in place" time="0.005"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should create a measurementMap from the configuration file" time="0.003"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should exclude from the measurementMap the disabled use cases" time="0.007"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should set the default send rate" time="0.004"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should set the default send rate and overwrite sendRate for different use cases" time="0.008"></testcase>
  <testcase classname="Monitoring module.Constructor" name="should set the default send rate to 60 seconds if missing" time="0.016"></testcase>
</testsuite>
<testsuite name="Monitoring module.StartMeasurement" errors="0" tests="8" failures="0" time="0.031" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.StartMeasurement" name="should not run the method if the module is disabled" time="0.007"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should log an error if use case is not passed to the method" time="0.003"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should log an error if invalid or disabled use case is passed to the method" time="0.002"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should generate an id if no id is passed" time="0.003"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should always return the id even though it is passed" time="0.003"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should register measurements to the map if no id is passed, no id should be pushedif operation is count and also should increment the active requests" time="0.002"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should register measurements and id to map if operation is average, should set the currenttime for the pushed id and should increment the active requests" time="0.005"></testcase>
  <testcase classname="Monitoring module.StartMeasurement" name="should push another id to the metrics map of an useCase if concurency, should set the activeRequeststo the number of concurent ids/users" time="0.005"></testcase>
</testsuite>
<testsuite name="Monitoring module.Stop Measurement" errors="0" tests="8" failures="0" time="0.032" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Stop Measurement" name="should log an error if usecase is not passed" time="0.003"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should log an error if usecase is invalid" time="0.003"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should log a debug message if usecase is disabled" time="0.005"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should log an error if it is called although no measurement was started" time="0.003"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should get the time of a request from start to end and added to total" time="0.006"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should increment the number of finished requests on end" time="0.003"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should flag the specified id from the map that it has finished the requests if average" time="0.006"></testcase>
  <testcase classname="Monitoring module.Stop Measurement" name="should reduce the number of active connections when measurement finishes" time="0.003"></testcase>
</testsuite>
<testsuite name="Monitoring module.Close" errors="0" tests="1" failures="0" time="0.013" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Close" name="should compose all data and send it to the server not depending on interval" time="0.013"></testcase>
</testsuite>
<testsuite name="Monitoring module.Register Event" errors="0" tests="2" failures="0" time="0.007" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Register Event" name="should register an event to the map" time="0.004"></testcase>
  <testcase classname="Monitoring module.Register Event" name="should increase the number of active connections" time="0.003"></testcase>
</testsuite>
<testsuite name="Monitoring module.Sending data to adapter" errors="0" tests="8" failures="0" time="0.108" timestamp="2013-06-03T12:24:47">
  <testcase classname="Monitoring module.Sending data to adapter" name="should reset the values after a period of time" time="0.03"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should keep the active requests until they are resolved" time="0.013"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should not send data if there were no resolved requests" time="0.005"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should reset the registered events" time="0.014"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should not reset the activeRequests for count measurements" time="0.003"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should not send data if nothing to send" time="0.019"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should measure even though the send was unsuccessfull" time="0.017"></testcase>
  <testcase classname="Monitoring module.Sending data to adapter" name="should compose the sending object with the secondary key" time="0.006"></testcase>
</testsuite>
</testsuites>